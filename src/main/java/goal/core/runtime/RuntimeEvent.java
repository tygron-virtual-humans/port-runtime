/**
 * GOAL interpreter that facilitates developing and executing GOAL multi-agent
 * programs. Copyright (C) 2011 K.V. Hindriks, W. Pasman
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package goal.core.runtime;

/**
 * Represents information related to an event generated by the platform rather
 * than an agent. Information carried by a platform event consists of the type
 * of the event and the source of the event (e.g. the platform manager, the MAS
 * registry, the scheduler).
 *
 */
public class RuntimeEvent {

	/**
	 * Event types that relate to platform related events which are NOT
	 * generated by an agent itself.
	 */
	public enum EventType {
		/**
		 * Event (type) generated when a MAS process has been started. Object is
		 * associated MASFileRegistry.
		 */
		MAS_BORN,
		/**
		 * Event (type) generated when a MAS process has died. Object is
		 * associated MASFileRegistry.
		 */
		MAS_DIED,
		/**
		 * Event (type) generated when an agent has been (partially) created. In
		 * case of messaging, this message is generated when the messagebox for
		 * the agent is created. Object is related Agent or a String with the
		 * agent name when agent is remote.
		 */
		AGENT_BORN,
		/**
		 * Agent is running locally and ready to run.
		 */
		AGENT_IS_LOCAL_AND_READY,
		/** Event (type) generated when an agent process has died. */
		AGENT_DIED,
		/**
		 * The agent was removed entirely from the system. Usually after it was
		 * killed.
		 */
		AGENT_REMOVED,
		/** Event (type) generated when a GOAL scheduler has been launched. */
		SCHEDULER_LAUNCHED,
		/** Event (type) generated when a GOAL scheduler has been killed. */
		SCHEDULER_KILLED,
		/**
		 * Event (type) generated when a GOAL scheduler has selected AT LEAST
		 * one or possibly more agent(s) for execution.
		 */
		SCHEDULER_SELECTED_AGENT,
		/**
		 * Event (type) generated when an environment has been launched by GOAL.
		 * Object is is an Environment.
		 */
		ENVIRONMENT_LAUNCHED,
		/**
		 * Event (type) generated when the run mode of an environment has
		 * changed.
		 */
		ENVIRONMENT_RUNMODE_CHANGED,
		/**
		 * The environment was killed
		 */
		ENVIRONMENT_KILLED

	}

	/**
	 * Type of the platform event. See
	 * {@link goal.core.runtime.RuntimeEvent.EventType} .
	 */
	private final EventType type;
	/**
	 * Object that generated the event or is related to the event (e.g. an
	 * agent).
	 */
	private final Object obj;

	/**
	 * Contains information about a platform-related event that occurred. The
	 * information consists of the type of the event (See
	 * {@link goals.tools.RuntimeEvent.EventType}) and the object that generated
	 * the event or is related to the event (e.g. an agent). Objects that can
	 * generate events are e.g. a multi-agent system (MASFileRegistry), the
	 * scheduler, or the platform manager
	 *
	 * @param type
	 *            type of the event.
	 * @param obj
	 *            object that is source of the event, e.g. an agent, registry.
	 */
	public RuntimeEvent(EventType type, Object obj) {
		this.type = type;
		this.obj = obj;
	}

	/**
	 * Returns type of the event. See EventType enum.
	 *
	 * @return type of the event.
	 */
	public EventType getType() {
		return this.type;
	}

	/**
	 * Returns source that generated the event.
	 *
	 * @return object that is source of event, e.g. agent or registry.
	 */
	public Object getSource() {
		return this.obj;
	}

	@Override
	public String toString() {
		return "RuntimeEvent[" + this.type + "," + this.obj + "]";
	}
}