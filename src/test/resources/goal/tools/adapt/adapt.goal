init module {
	knowledge{
		% only blocks can be on top of another object.
		block(X) :- on(X, _).
		% a block is clear if nothing is on top of it.
       	clear(X) :- block(X), not( on(_, X) ).
		% the table is always clear.
		clear(0).
	}
	beliefs{
		on(1,0).
		on(2,0).
		on(3,0).
	}
	goals{
		on(1,0), on(2,1), on(3,2).
	}
	actionspec{
		move(X, Y) {
		   pre{ block(X), clear(X), clear(Y), on(X, Z), not( on(X, Y) ) }
		   post{ not( on(X, Z) ), on(X, Y) }
		}
	}
}

main module [exit=nogoals]{
	program[order=adaptive] {
		% Can't use bel(true) below because X/Y must be bound in precondition
		if bel(block(X),clear(X),clear(Y),not(X=Y)) then move(X, Y).
	}
}
