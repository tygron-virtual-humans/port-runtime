init module {
	
	knowledge {
	
		fib(0,0).
		fib(1,1).
		fib(X,Y) :- X > 1, 
					X2 is X - 2, fib(X2, Y2),
					X1 is X - 1, fib(X1, Y1),
					Y is Y1 + Y2.
	
	}
 
}
	  
main module [exit=nogoals] {
	program{
		if bel(fib(12,Y)) then insert(fib(Y)).
	}
}

module beforeModule {

	program{
		if bel(not(beforeModule)) then insert(beforeModule).
	}
}

module moduleUnderTest(Identifier,FourtyTwo,DotFourtyTwo,FunctionIdIdId) {

	program{
		if bel(not(moduleUnderTest)) then insert(moduleUnderTest).
	}

}
%TODO: Something Something is valid valid arg but can't be bound by prolog.
module afterModule(Something,SomethingELse) {

	program{
		if bel(not(afterModule)) then insert(afterModule).
	}
}
	
